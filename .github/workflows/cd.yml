name: Continous deployment
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: ['14']

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --ignore-scripts

      - name: Building
        run: |
          npm run build

  release:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['14']
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.3
        with:
          # Make sure the release step uses its own credentials.
          persist-credentials: false

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install --ignore-scripts

      - name: Create new release
        env:
          GH_TOKEN: ${{secrets.GH_TOKEN}}
          GIT_AUTHOR_NAME: github-actions
          GIT_AUTHOR_EMAIL: 44210433+github-actions@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions
          GIT_COMMITTER_EMAIL: 44210433+github-actions@users.noreply.github.com
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}
        run: npx --no-install semantic-release